<u>我是u标记</u> 下划线
<s>我是s标记</s> 划线  
<b>我是b标记</b> 加粗 strong
<i>我是i标记</i> 斜体 em
<label>常用于表单里面点击姓名的时候焦点自动放到姓名输入框
------------------------------------------------------------
元素选择器
  <style>
		li{
			/*font-size:字体大小*/
			font-size: 40px;
			color:red;
		}
	</style>
类选择器
  /*类选择器*/
		.f1{
			font-size:20px;
			color:blue;
		}
ID选择器
  /*id选择器:自动套用在标用id的标签上*/
		#f2{
			font-size: 50px;
			color:green;
		}
---------------------------------------------------------------------    
行内样式
<td style="font-size: 20px;color:red">content1</td>
内嵌样式
<head>
	<meta charset="UTF-8">
	<title>样式的应用范围</title>
	<style>
		/*内嵌样式*/
		p{
			font-size: 28px;
			color:pink;
		}
	</style>
</head>
外部样式    
<!-- 引入样式文件 -->
<link rel="stylesheet" type="text/css" href="sty.css" />
-----------------------------------------------------------------------------------------------
CSS样式优先级机制
1）Css定义位置的优先级：（离元素越近，优先级越高） “元素上的style” > “文件头上的style元素” >“外部样式文件”
特例：如果外部样式放在内部样式的后面，则外部样式将覆盖内部样式。
2）关于选择器的优先级：(越精确，优先级越高) id选择器指定的样式 > 类选择器指定的样式 > 标签样式
(id:页面的唯一元素)
3）Css定义块中上下文优先级： 下文 > 上文
注意点：
a）class=”class2 class1”中实现的样式是class2和class1的并集，若属性重复，则以在css块中最下面的样式为准。 
b）!important用于设定重复样式下的高优先级。
----------------------------------------------------
后代选择器
/*后代元素:空格*/
	div p{
		color:red;
	}
子元素选择器
/*需要是直接后代*/
div>p{
    font-size:300px;
    color: red;
}
交集选择器
“交集”选择器：由两个选择器直接连接构成，其结果是选中二者各自元素范围的交集，其中第一必须是标记选择器，
第二个必须是类别选择器或者ID选择器，两个选择器之间不能有空格，必须连续书写.
<body>
  <h1 class="r2">交集选择器</h1>
  <p id="f3">会是交集吗</p>
  <p class="r1">会是交集吗</p>
</body>
p.r1{
    color: blueviolet;
}
p#f3{
    color: black;
}
h1.r2{
    color: yellow;
}
并集选择器
“并集”选择器：同时选中各个基本选择器所选择的范围，任何形式的选择器都可以，并集选择器是多个选择器通过逗号连接而成的
<body>
  <h1>并集选择器</h1>
  <ol>
    <li>h</li>
    <li>hh</li>
    <li>hhh</li>
  </ol>
  <table><tr>
    <th>111</th>
  </tr></table>
  <p>hahah</p>
p,tr,th,li {
    color: red;
} 
---------------------------------------------
Css继承
继承性是指指被包在内部的标签将拥有外部标签的样式性，即子元素可以继承父元素的属性，CSS中有可以和不可以继承的属性。
----------------------------------------------
内联标签(inline)与块标签(block)

block元素的特点
总是在新行上开始
高度，行高以及顶和底边距都可控制
宽度缺省是它的容器的100%，除非设定一个宽度
###<div>, <p>, <h1>, <form>, <ul>和<li>是块元素的例子。

inline元素的特点
和其他元素都在一行上；
高，行高及顶和底边距不可改变；
宽度就是它的文字或图片的宽度，不可改变。
<span>, <a>, <label>, <input>, <img>, <strong>和<em>是inline元素的例子。

inline-block的元素
display:inline-block 行间的块状元素
div是单独占据一行的

小可爱qaq〃∀〃 2018/5/31 17:15:24
就算你给他设置固定的宽度

诺亚方舟 2018/5/31 17:15:27
。

小可爱qaq〃∀〃 2018/5/31 17:15:37
其他元素都会被他挤下去

诺亚方舟 2018/5/31 17:15:41
好哒哒

小可爱qaq〃∀〃 2018/5/31 17:16:07
如果你在div身上设置display为inline_block

小可爱qaq〃∀〃 2018/5/31 17:16:49
两个div宽度没有超过浏览器宽度是可以在同一行的

小可爱qaq〃∀〃 2018/5/31 17:16:53
懂了吗？！！！
<body>
  <div>你好</div>
  <div>你好不好</div>
</body>
div{
    display: inline-block;
    color: red;
}
------------------------------------------------
字体属性
font-family字体 宋体啊什么的
font-size字体大小
font-style样式normal、italic
font-weight加粗样式bold/normal/lighter

文本属性
text-align:left/right/center/
text-indent:缩进
text-decoration:none/blink/underline/overline/line-through/
text-transform:字母样式none/capitalize/uppercase/lowercase/
vertical-align:垂直对其super/sub/top/middle/bottom
word-spacing:单词间距
letter-spacing:字母间距
1 em = 16 px = 100%

边框属性
border:内边框，包含下面三个样式的符合属性
border-style:边框线条:none/solid/double/ridge/inset/outset/groove/dotted/dashed  实线还是别的线型
border-width:边框线条宽度:thick/medium/thin 线条的粗细
border-color:边框线颜色 
outline:外边框

定位属性
top/left:顶边距/左边距
width/height
color/background-color/background-image:url/background-repeat：背景图重复方式repeat/repeat-x/repeat-y/no-repeat

背景属性
background-size: length | percentage | cover | contain;
1:length
    该属性值是设置背景图像的宽度和高度的，第一个值是宽度，第二个值是设置高度的。如果只设置第一个值，那么第二个值会自动转换为 “auto”;
2:percentage
    该属性是以父元素的百分比来设置图片的宽度和高度的，第一个值是宽度，第二个值是高度。如果只设置一个值，那么第二个值会被设置为 “auto”;
3：cover
     把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。
4：contain
      把图像扩展至最大尺寸，以使宽度和高度 完全适应内容区域。    
tr:first-child{
    background: #4BABFF;
}
tr:nth-child(2n+1){
    background: #C7E5FF;
}
    tr:nth-child(2n){
    background: #EBF5FF;
}

链接样式
a:link {color: #FF0000}		/* 未访问的链接 */
a:visited {color: #00FF00}	/* 已访问的链接 */
a:hover {color: #FF00FF}	/* 鼠标移动到链接上 */
a:active {color: #0000FF}	/* 选定的链接 */
---------------------------------------------------
表单相关内容
<!-- form:表单域：放置表单元素的区域 -->
<!-- action:表单提交的目的地：html servlet jsp文件 -->
<!-- method:post:将表单数据打包发送到服务器  get：将表单的数据通过地址栏发送到服务器 -->
<form action="register.html" method="post">
